{"version":3,"sources":["api/api.js","App.js","index.js"],"names":["api","weatherApi","key","base","unsplashApi","Container","styled","div","props","background","Search","form","Info","TempContainer","Temp","TempDetails","TempIcons","DefaultInfo","Footer","Flex","App","useState","city","setCity","weather","setWeather","setBackground","Math","floor","random","urls","full","onSubmit","e","preventDefault","fetch","then","response","json","data","console","log","results","type","placeholder","value","onChange","target","current","request","query","location","localtime","temperature","feelslike","src","weather_icons","alt","weather_descriptions","humidity","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAWeA,EAXH,CACRC,WAAY,CACVC,IAAK,mCACLC,KAAM,uCAERC,YAAa,CACXF,IAAK,8CACLC,KAAM,kD,OCkFZ,IAAME,EAAYC,IAAOC,IAAV,0OAOC,SAACC,GAAD,OACZA,EAAMC,WAAN,eACYD,EAAMC,WADlB,oCAEI,aAKFC,EAASJ,IAAOK,KAAV,+dAwBNC,EAAON,IAAOC,IAAV,40BAwCJM,EAAgBP,IAAOC,IAAV,sMAYbO,EAAOR,IAAOC,IAAV,kGAMJQ,EAAcT,IAAOC,IAAV,4GASXS,EAAYV,IAAOC,IAAV,0EAKTU,EAAcX,IAAOC,IAAV,kHAOXW,EAASZ,IAAOC,IAAV,oNAED,SAACC,GAAD,OAAYA,EAAMC,WAAa,WACzB,SAACD,GAAD,OAAYA,EAAMC,WAAa,oBAAsB,OAGzD,SAACD,GAAD,OAAYA,EAAMC,WAAa,WAStCU,EAAOb,IAAOC,IAAV,kGAOKa,EAjOf,WAAgB,IAAD,EAGWC,mBAAS,IAHpB,mBAGNC,EAHM,KAGAC,EAHA,OAIiBF,mBAAS,IAJ1B,mBAING,EAJM,KAIGC,EAJH,OAKuBJ,mBAAS,IALhC,mBAKNZ,EALM,KAKMiB,EALN,KA4Bb,OACE,eAACrB,EAAD,CACEI,WACEA,EAAW,GAAKA,EAAWkB,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgBC,KAAKC,KAAO,GAF3E,UAKE,eAACrB,EAAD,CAAQsB,SA3BG,SAACC,GACdA,EAAEC,iBAEFC,MAAM,GAAD,OACAnC,EAAIC,WAAWE,KADf,uBACkCH,EAAIC,WAAWC,IADjD,kBAC8DoB,IAEhEc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLd,EAAWc,GACXhB,EAAQ,IACRiB,QAAQC,IAAIF,MAGhBJ,MAAM,GAAD,OAAInC,EAAII,YAAYD,MAApB,OAA2BmB,EAA3B,sBAA6CtB,EAAII,YAAYF,MAC/DkC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLb,EAAca,EAAKG,SACnBF,QAAQC,IAAIhC,OAUd,UACE,uBACEkC,KAAK,OACLC,YAAY,sBACZC,MAAOvB,EACPwB,SAAU,SAACb,GAAD,OAAOV,EAAQU,EAAEc,OAAOF,UAGR,qBAApBrB,EAAQwB,SAA2BvC,EAAW,GACpD,CACE,eAACG,EAAD,WACE,6BAAKY,EAAQyB,QAAQC,QACrB,4BAAI1B,EAAQ2B,SAASC,YACrB,eAACvC,EAAD,WACE,eAACC,EAAD,WACE,+BAAKU,EAAQwB,QAAQK,YAArB,YACA,qCAAQ7B,EAAQwB,QAAQM,UAAxB,cAEF,cAACtC,EAAD,UACE,qBAAKuC,IAAK/B,EAAQwB,QAAQQ,cAAc,GAAIC,IAAI,OAElD,eAAC1C,EAAD,WACE,4BAAIS,EAAQwB,QAAQU,qBAAqB,KACzC,0CAAalC,EAAQwB,QAAQW,SAA7B,gBAIN,cAACxC,EAAD,KAGF,cAACF,EAAD,UACE,2GAQN,cAACC,EAAD,CAAQT,WAAYA,EAAW,GAA/B,SACE,+DACuB,IACrB,mBAAGmD,KAAK,+BAA+Bb,OAAO,SAA9C,sC,MC3EVc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6d60b92.chunk.js","sourcesContent":["const api = {\r\n    weatherApi: {\r\n      key: \"d355671dd4ee8898100b7f1969362cd6\",\r\n      base: \"http://api.weatherstack.com/current\",\r\n    },\r\n    unsplashApi: {\r\n      key: \"qh-b4-wEIqKayiSN-tKQ5JP8opkjnI6-YeoYqj_smnU\",\r\n      base: \"https://api.unsplash.com/search/photos?query=\",\r\n    },\r\n};\r\n\r\nexport default api; ","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport api from './api/api'\n\nfunction App() {\n\n\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [background, setBackground] = useState({});\n\n  const search = (e) => {\n    e.preventDefault();\n\n    fetch(\n      `${api.weatherApi.base}?access_key=${api.weatherApi.key}&query=${city}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setWeather(data);\n        setCity(\"\");\n        console.log(data);\n      });\n\n    fetch(`${api.unsplashApi.base}${city}&client_id=${api.unsplashApi.key}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setBackground(data.results);\n        console.log(background);\n      });\n  };\n\n  return (\n    <Container\n      background={\n        background[0] ? background[Math.floor(Math.random() * 10)].urls.full : \"\"\n      }\n    >\n      <Search onSubmit={search}>\n        <input\n          type=\"text\"\n          placeholder='By example \"London\"'\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n        />\n\n        {typeof weather.current !== \"undefined\" && background[0] ? (\n          [\n            <Info>\n              <h2>{weather.request.query}</h2>\n              <p>{weather.location.localtime}</p>\n              <TempContainer>\n                <Temp>\n                  <h1>{weather.current.temperature}°C/</h1>\n                  <h3>FL {weather.current.feelslike}°C</h3>\n                </Temp>\n                <TempIcons>\n                  <img src={weather.current.weather_icons[0]} alt=\"\" />\n                </TempIcons>\n                <TempDetails>\n                  <p>{weather.current.weather_descriptions[0]}</p>\n                  <p>Humidity {weather.current.humidity}%</p>\n                </TempDetails>\n              </TempContainer>\n            </Info>,\n            <Flex />,\n          ]\n        ) : (\n          <DefaultInfo>\n            <p>\n              Enter the name of any city above to see the temperature and the\n              time.\n            </p>\n          </DefaultInfo>\n        )}\n      </Search>\n\n      <Footer background={background[0]}>\n        <p>\n          Developed with ❤️ by{\" \"}\n          <a href=\"https://github.com/darking98\" target=\"_blank\">\n            Diego Rodriguez\n          </a>\n        </p>\n      </Footer>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: black;\n  background: ${(props) =>\n    props.background\n      ? `url(\"${props.background}\") no-repeat center center fixed`\n      : \"#2B2B3D\"};\n  background-size: cover;\n  transition: 2s ease-out;\n`;\n\nconst Search = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 750px;\n  text-align: center;\n\n  @media (max-width: 800px) {\n    width: 375px;\n  }\n  input {\n    width: 500px;\n    padding: 5px 20px;\n    margin: 0px 0px 80px 0px;\n    border-radius: 0px 0px 10px 10px;\n    background: #fff;\n    border: none;\n    outline: none;\n    @media (max-width: 800px) {\n      width: 100%;\n      margin: 0px 0px 50px 0px;\n    }\n  }\n`;\nconst Info = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  align-items: center;\n  color: white;\n  background: rgba(255, 255, 255, 0.2);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(4.5px);\n  -webkit-backdrop-filter: blur(4.5px);\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n\n  @media (max-width: 800px) {\n    justify-content: center;\n    flex: 0;\n  }\n  h2 {\n    font-size: 50px;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 1);\n    padding: 20px;\n\n    @media (max-width: 800px) {\n      font-size: 30px;\n    }\n  }\n\n  p {\n    font-size: 30px;\n    color: #ccc;\n    font-style: italic;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 1);\n\n    @media (max-width: 800px) {\n      font-size: 15px;\n    }\n  }\n`;\n\nconst TempContainer = styled.div`\n  font-size: 50px;\n  color: #fff;\n  padding: 30px;\n  border-radius: 10px;\n  transition: all 2s ease-out;\n\n  @media (max-width: 800px) {\n    font-size: 30px;\n  }\n`;\n\nconst Temp = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TempDetails = styled.div`\n  display: flex;\n  justify-content: center;\n\n  p {\n    padding: 20px;\n  }\n`;\n\nconst TempIcons = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst DefaultInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n`;\n\nconst Footer = styled.div`\n  font-size: 15px;\n  color: ${(props) => (props.background ? \"white\" : \"white\")};\n  text-shadow: ${(props) => (props.background ? \"0px 0px 10px #000\" : \"0\")};\n\n  a {\n    color: ${(props) => (props.background ? \"white\" : \"white\")};\n    text-decoration: none;\n    transition: 0.4s ease;\n    :hover {\n      color: #ccc;\n    }\n  }\n`;\n\nconst Flex = styled.div`\n  flex: 2;\n\n  @media (max-width: 800px) {\n    display: none;\n  }\n`;\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './app.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}